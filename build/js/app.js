(function(){window.app=angular.module("twtrApp",["ngRoute","ngResource","templatescache","LocalStorageModule"]),window.app.config(["$routeProvider","$locationProvider","localStorageServiceProvider",function(e,t,r){return e.when("/tweet/:id",{templateUrl:"../pages/tweet.html",controller:"TweetPageController"}).when("/signin",{templateUrl:"../pages/signin.html",controller:"SigninPageController"}).otherwise({redirectTo:"/",templateUrl:"../pages/index.html",controller:"IndexPageController"}),t.html5Mode(),r.setPrefix("twtrApp")}]),window.app.run(["$rootScope","$location","authService",function(e,t,r){return e.$on("$routeChangeStart",function(e){return console.log("user isLogged",r.isLogged()),r.isLogged()?void 0:t.path("/signin")})}])}).call(this),function(){window.app.controller("IndexPageController",["$rootScope","$scope","TweetEntity","tweetsRepository","authService","backendService",function(e,t,r,n,o,i){return t.currentUser=o.getCurrentUser(),t.tweets=null,console.log("userId",t.currentUser.ownerId),t.init=function(){return t.readAll()},t.readAll=function(){return n.readAll(t.currentUser.ownerId).then(function(e){return console.log("readAll tweets",e.data),t.tweets=e.data},function(e){return console.log("readAll error",e)})},t.addTweet=function(){var e;return e=new r({text:t.newTweetText.trim()}),n.addTweet(e).then(function(e){return t.readAll(),t.newTweetText=""},function(e){return console.log("addTweet error",e)})},t.removeTweet=function(e){return n.removeTweet(e).then(function(e){return t.readAll()},function(e){return console.log("removeTweet error",e)})},t.init()}])}.call(this),function(){window.app.controller("SigninPageController",["$scope","$location","authService","UserEntity",function(e,t,r,n){return e.userSignIn=function(){return r.login(e.email,e.password).then(function(e){return t.path("/")})}}])}.call(this),function(){window.app.controller("TweetPageController",["$rootScope","$scope","$routeParams","tweetsRepository",function(e,t,r,n){return console.log("$rootScope.currentUser",e.currentUser)}])}.call(this),function(){window.app.controller("UserPanelController",["$rootScope","$scope","authService","$location","backendService",function(e,t,r,n,o){return t.name=r.getCurrentUser().email,t.userSignOut=function(){return r.logout().then(function(){return n.path("/signin")})}}])}.call(this),function(){window.app.directive("space",["$templateCache",function(e){return{restrict:"E",replace:!0,template:e.get("space.html")}}])}.call(this),function(){window.app.directive("tweetView",["$templateCache",function(e){return{restrict:"E",replace:!0,template:e.get("tweet-page.html")}}])}.call(this),function(){window.app.directive("tweet",["$templateCache",function(e){return{restrict:"E",replace:!0,template:e.get("tweet.html")}}])}.call(this),function(){window.app.directive("userPanel",["$templateCache",function(e){return{restrict:"E",replace:!0,scope:"=",template:e.get("user-panel.html")}}])}.call(this),function(){window.app.factory("TweetEntity",[function(){var e;return e=function(){function e(e){null==e&&(e={}),this.text=e.text}return e}()}])}.call(this),function(){window.app.factory("UserEntity",[function(){var e;return e=function(){function e(e){null==e&&(e={}),this.id=e.id||0,this.email=e.email}return e}()}])}.call(this),function(){window.app.factory("tweetsRepository",["backendService",function(e){var t;return new(t=function(){function t(){}return t.prototype.readAll=function(t){return e.readAll(t)},t.prototype.addTweet=function(t){return e.addTweet(t)},t.prototype.removeTweet=function(t){return e.removeTweet(t)},t}())}])}.call(this),function(){}.call(this),function(){app.factory("authService",["$location","$rootScope","localStorageService","backendService",function(e,t,r,n){var o;return new(o=function(){function e(){}return e.prototype.login=function(e,t){return n.login(e,t).then(function(e){return r.set("userIsLogged",!0),r.set("currentUser",e)},function(e){return console.log("Error",e)})},e.prototype.logout=function(){return n.logout().then(function(){return r.remove("userIsLogged"),r.remove("currentUser")})},e.prototype.getCurrentUser=function(){return r.get("currentUser")},e.prototype.isLogged=function(){return r.get("userIsLogged")},e}())}])}.call(this),function(){app.factory("backendService",["$q","TweetEntity",function(e,t){var r;return new(r=function(){function t(){var e,t,r;e="25D38AE7-3C30-2CBE-FF70-A1C71CAF3F00",t="D8C194D6-66C5-F9AF-FFF4-95F759FB8500",r="v1",this.bl=Backendless,this.bl.initApp(e,t,r),this.UserService=this.bl.UserService,this.TweetService=this.bl.Persistence.of("Tweets")}return t.prototype.promiseWrapper=function(){var t,r,n,o,i,c;for(c=arguments[0],i=arguments[1],n=e.defer(),r=new this.bl.Async(n.resolve,n.reject),o=2,t=[];o<arguments.length;)t.push(arguments[o]),o++;return t.push(r),c[i].apply(c,t),n.promise},t.prototype.login=function(e,t){return this.promiseWrapper(this.UserService,"login",e,t,!0)},t.prototype.logout=function(){return this.promiseWrapper(this.UserService,"logout")},t.prototype.readAll=function(e){var t;return t={condition:"ownerId = '"+e+"'"},this.promiseWrapper(this.TweetService,"find",t)},t.prototype.addTweet=function(e){return this.promiseWrapper(this.TweetService,"save",e)},t.prototype.removeTweet=function(e){return this.promiseWrapper(this.TweetService,"remove",e)},t}())}])}.call(this);